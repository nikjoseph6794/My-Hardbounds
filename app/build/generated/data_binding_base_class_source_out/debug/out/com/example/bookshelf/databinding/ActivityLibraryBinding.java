// Generated by view binder compiler. Do not edit!
package com.example.bookshelf.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bookshelf.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLibraryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button backupBtn;

  @NonNull
  public final TextView emptyHint;

  @NonNull
  public final TextView libraryHeader;

  @NonNull
  public final RecyclerView libraryList;

  @NonNull
  public final Button restoreBtn;

  @NonNull
  public final EditText searchInput;

  private ActivityLibraryBinding(@NonNull LinearLayout rootView, @NonNull Button backupBtn,
      @NonNull TextView emptyHint, @NonNull TextView libraryHeader,
      @NonNull RecyclerView libraryList, @NonNull Button restoreBtn,
      @NonNull EditText searchInput) {
    this.rootView = rootView;
    this.backupBtn = backupBtn;
    this.emptyHint = emptyHint;
    this.libraryHeader = libraryHeader;
    this.libraryList = libraryList;
    this.restoreBtn = restoreBtn;
    this.searchInput = searchInput;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLibraryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLibraryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_library, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLibraryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backupBtn;
      Button backupBtn = ViewBindings.findChildViewById(rootView, id);
      if (backupBtn == null) {
        break missingId;
      }

      id = R.id.emptyHint;
      TextView emptyHint = ViewBindings.findChildViewById(rootView, id);
      if (emptyHint == null) {
        break missingId;
      }

      id = R.id.libraryHeader;
      TextView libraryHeader = ViewBindings.findChildViewById(rootView, id);
      if (libraryHeader == null) {
        break missingId;
      }

      id = R.id.libraryList;
      RecyclerView libraryList = ViewBindings.findChildViewById(rootView, id);
      if (libraryList == null) {
        break missingId;
      }

      id = R.id.restoreBtn;
      Button restoreBtn = ViewBindings.findChildViewById(rootView, id);
      if (restoreBtn == null) {
        break missingId;
      }

      id = R.id.searchInput;
      EditText searchInput = ViewBindings.findChildViewById(rootView, id);
      if (searchInput == null) {
        break missingId;
      }

      return new ActivityLibraryBinding((LinearLayout) rootView, backupBtn, emptyHint,
          libraryHeader, libraryList, restoreBtn, searchInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
